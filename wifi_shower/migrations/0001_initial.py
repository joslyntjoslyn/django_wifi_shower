# Generated by Django 2.1.3 on 2018-11-04 21:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import wifi_shower.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', wifi_shower.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac_id', models.CharField(max_length=100, unique=True)),
                ('secret_key', models.CharField(blank=True, max_length=8, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('sold_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('preheat_cycle', models.FloatField(blank=True, null=True)),
                ('shower_cycle', models.FloatField(blank=True, null=True)),
                ('shower_temp', models.FloatField(blank=True, null=True)),
                ('old_shower_habits', models.FloatField(blank=True, null=True)),
                ('water_used', models.FloatField(blank=True, null=True)),
                ('water_saved', models.FloatField(blank=True, null=True)),
                ('challenge_level', models.FloatField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_shower_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profile',
            },
        ),
        migrations.CreateModel(
            name='ShoweringData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('shower_mode', models.IntegerField(default=0)),
                ('preheat_cycle', models.FloatField(blank=True, null=True)),
                ('shower_cycle', models.FloatField(blank=True, null=True)),
                ('old_shower_habits', models.FloatField(blank=True, null=True)),
                ('water_used', models.FloatField(blank=True, null=True)),
                ('water_saved', models.FloatField(blank=True, null=True)),
                ('shower_temp', models.FloatField(blank=True, null=True)),
                ('mixing_temp', models.FloatField(blank=True, null=True)),
                ('challenge_level', models.FloatField(blank=True, null=True)),
                ('aggregate_water_used', models.FloatField(blank=True, null=True)),
                ('average_water_used', models.FloatField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wifi_shower.Device')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wifi_shower.Profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'showering_data',
            },
        ),
    ]
